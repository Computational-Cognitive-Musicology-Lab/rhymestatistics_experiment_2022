base
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')
base <- sapply(fampat,
\(pat) {
pat <- c('N' = 'N0', S = 'S0', O = '00')[pat]
if (pat[1] == 'S') {
pat[1] <- '0'
pat[length(pat)] <- '1'
}
pat <- paste(collapse = '', pat)
pat <- gsub('0S', '10', pat)
})
base
str_locate(base, '0N')
}
family('NNNS')
combn(1:3, 2:3)
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[base]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')[[1]]
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')[[1]]
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')[[1]]
other <- sapply(combns, \(i) {
browser()
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
basesplit
i
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
basesplit <- strsplit(base, split = '')[[1]]
browser()
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
combns
unlist(combns, recurseive=F)
unlist(combns, recursive=F)
do.call('c', combns)
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combms <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
other <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
c(base, others)
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
browser()
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNNS')
basesplit
i
family('NNNS')
fillable
base
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate_a;;(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
browser()
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- str_locate_all(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
browser()
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNNS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
browser()
fillable <- str_locate_all(base, '0N')[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNNS')
str+;p str_locate_all(base, '0N')
str_locate_all(base, '0N')
base
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- do.call('rbind', str_locate_all(base, '0N'))[, 'start']
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNNS')
family('NNOS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- do.call('rbind', str_locate_all(base, '0N'))[, 'start']
if (grepl('^N', base) && grepl('0$', base)) fillable <- c(fillable, nchar(base))
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '1'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNOS')
family('NNOO')
family('NNOONONS')
family <- function(fampat) {
fampat <- strsplit(fampat, split = '')[[1]]
base <- c('N' = 'N0', S = 'S0', O = '00')[fampat]
if (base[1] == 'S') {
base[1] <- '0'
base[length(base)] <- '1'
}
base <- paste(collapse = '', base)
base <- gsub('0S', '10', base)
fillable <- do.call('rbind', str_locate_all(base, '0N'))[, 'start']
if (grepl('^N', base) && grepl('0$', base)) fillable <- c(fillable, nchar(base))
if (length(fillable) > 0){
combns <- lapply(1:length(fillable), combn, x = fillable, simplify = FALSE)
combns <- do.call('c', combns)
basesplit <- strsplit(base, split = '')[[1]]
others <- sapply(combns, \(i) {
basesplit[i] <- '.'
paste(basesplit, collapse = '')
})
}
gsub('N', '1', c(base, others))
}
family('NNOONONS')
?combn
library(tuneR)
install.packages('tuneR')
library(tuneR)
setwd("~/Bridge/Research/Projects/Lyrics/Rhyme/RhymeStatistics_Experiment2022/Stimuli")
setwd("~/Bridge/Research/Projects/Lyrics/Rhyme/RhymeStatistics_Experiment2022/Stimuli")
tuneR::readMP3(filename = 'endthreevowel_rhyme1.mp3')
tuneR::readMP3(filename = 'endthreevowel_rhyme1.mp3') -> z
z@left
z@stereo
z@left
z@left
trimWave <- function(wave) {
zero <- which(wave != 0)
start <- max(1, zero[1] - 4000)
end <- min(length(wave), max(zero) + 1000)
wave
}
tuneR::readMP3(filename = 'endthreevowel_rhyme1.mp3') -> z
z
X11()
plot(z@left)
plot(z@left,type='l')
plot(timeWave(z@left),type='l')
plot(trimWave(z@left),type='l')
trimWave <- function(wave) {
zero <- which(wave != 0)
start <- max(1, zero[1] - 4000)
end <- min(length(wave), max(zero) + 1000)
wave[start:end]
}
plot(trimWave(z@left),type='l')
trimWave <- function(wave) {
zero <- which(wave != 0)
start <- max(1, zero[1] - 4000)
end <- min(length(wave), max(zero) + 1000)
wave <- wave[start:end]
rle(wave)
}
trimWave(z@left)
trimWave(z@left)@lengths
trimWave(z@left)$lengths
trimWave(z@left)$lengths |> plot()
trimWave <- function(wave) {
zero <- which(wave != 0)
start <- max(1, zero[1] - 4000)
end <- min(length(wave), max(zero) + 1000)
wave <- wave[start:end]
rle <- rle(wave)
rle$lengths[rle$lengths > 44000] <- 44000
inverse.rle(rle)
}
plot(trimWave(z@left),type='l')
plot((z@left),type='l')
trimWave <- function(wave) {
zero <- which(wave != 0)
# start <- max(1, zero[1] - 4000)
# end <- min(length(wave), max(zero) + 1000)
# wave <- wave[start:end]
rle <- rle(wave)
rle$lengths[rle$lengths > 44000] <- 44000
inverse.rle(rle)
}
plot((z@left),type='l')
plot(trimWave(z@left),type='l')
trimWave <- function(wave) {
zero <- which(wave != 0)
start <- max(1, zero[1] - 4000)
end <- min(length(wave), max(zero) + 1000)
wave <- wave[start:end]
rle <- rle(wave)
rle$lengths[rle$lengths > 44000] <- 22000
inverse.rle(rle)
}
plot((z@left),type='l')
plot(trimWave(z@left),type='l')
z
?z
tuneR::mono(z)
tuneR::mono(z)->h
h@left
h@right
z
modifyMp3 <- function(fn) {
audio <- readMP3(fn)
audio2 <- mono(audio)
audio2@left <- trimWave(audio2@left)
list(audio, audio2)
}
modifyMp3('endthreevowel_rhyme1.mp3')
?tuneR::writeWave
modifyMp3 <- function(fn) {
audio <- readMP3(fn)
audio2 <- mono(audio)
audio2@left <- trimWave(audio2@left)
writeWave(audio2, gsub('\\.mp3$', '.wav', fn))
}
dir()
dir(pattern = '.mp3$')
lapply(dir(pattern = '.mp3$'), modifyMp3)
